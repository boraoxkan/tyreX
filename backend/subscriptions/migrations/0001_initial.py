# Generated by Django 5.2.4 on 2025-07-24 22:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Plan Adı')),
                ('plan_type', models.CharField(choices=[('free', 'Ücretsiz'), ('basic', 'Temel'), ('premium', 'Premium'), ('enterprise', 'Kurumsal')], max_length=20, unique=True, verbose_name='Plan Türü')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Açıklama')),
                ('monthly_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Aylık Fiyat')),
                ('yearly_price', models.DecimalField(blank=True, decimal_places=2, help_text='Yıllık ödeme yapıldığında uygulanacak fiyat', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Yıllık Fiyat')),
                ('max_users', models.PositiveIntegerField(default=1, help_text='Bu planda kaç kullanıcı olabilir', verbose_name='Maksimum Kullanıcı Sayısı')),
                ('max_warehouses', models.PositiveIntegerField(default=1, help_text='Bu planda kaç depo oluşturulabilir', verbose_name='Maksimum Depo Sayısı')),
                ('max_products', models.PositiveIntegerField(default=100, help_text='Bu planda kaç ürün stoklanabilir', verbose_name='Maksimum Ürün Sayısı')),
                ('api_rate_limit', models.PositiveIntegerField(default=1000, help_text='Günde kaç API isteği yapılabilir', verbose_name='API İstek Limiti (günlük)')),
                ('marketplace_access', models.BooleanField(default=False, help_text='B2B pazaryerine erişebilir mi?', verbose_name='Pazaryeri Erişimi')),
                ('dynamic_pricing', models.BooleanField(default=False, help_text='Dinamik fiyat hesaplama özelliği', verbose_name='Dinamik Fiyatlandırma')),
                ('advanced_analytics', models.BooleanField(default=False, help_text='Detaylı raporlar ve analitics', verbose_name='Gelişmiş Analitik')),
                ('priority_support', models.BooleanField(default=False, help_text='Öncelikli müşteri desteği', verbose_name='Öncelikli Destek')),
                ('tyrex_commission_rate', models.DecimalField(decimal_places=2, default=Decimal('2.50'), help_text='Pazaryeri işlemlerinden alınacak komisyon yüzdesi', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('100.00'))], verbose_name='Tyrex Komisyon Oranı (%)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sıra')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Abonelik Planı',
                'verbose_name_plural': 'Abonelik Planları',
                'ordering': ['sort_order', 'monthly_price'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('trialing', 'Deneme Sürümü'), ('active', 'Aktif'), ('past_due', 'Ödeme Gecikmesi'), ('canceled', 'İptal Edildi'), ('unpaid', 'Ödenmedi'), ('expired', 'Süresi Doldu')], default='trialing', max_length=20, verbose_name='Durum')),
                ('billing_cycle', models.CharField(choices=[('monthly', 'Aylık'), ('yearly', 'Yıllık')], default='monthly', max_length=20, verbose_name='Faturalandırma Döngüsü')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Başlangıç Tarihi')),
                ('trial_end_date', models.DateTimeField(blank=True, help_text='Deneme sürümü bitiş tarihi', null=True, verbose_name='Deneme Bitiş Tarihi')),
                ('current_period_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Mevcut Dönem Başlangıcı')),
                ('current_period_end', models.DateTimeField(blank=True, null=True, verbose_name='Mevcut Dönem Bitişi')),
                ('canceled_at', models.DateTimeField(blank=True, null=True, verbose_name='İptal Tarihi')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Mevcut dönem için ödenen/ödenecek tutar', max_digits=10, verbose_name='Tutar')),
                ('currency', models.CharField(default='TRY', max_length=3, verbose_name='Para Birimi')),
                ('current_users', models.PositiveIntegerField(default=0, verbose_name='Mevcut Kullanıcı Sayısı')),
                ('current_warehouses', models.PositiveIntegerField(default=0, verbose_name='Mevcut Depo Sayısı')),
                ('current_products', models.PositiveIntegerField(default=0, verbose_name='Mevcut Ürün Sayısı')),
                ('api_calls_this_month', models.PositiveIntegerField(default=0, verbose_name='Bu Ayki API Çağrısı')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('company', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscription', to='companies.company', verbose_name='Şirket')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='subscriptions.subscriptionplan', verbose_name='Abonelik Planı')),
            ],
            options={
                'verbose_name': 'Abonelik',
                'verbose_name_plural': 'Abonelikler',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SubscriptionUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateTimeField(verbose_name='Dönem Başlangıcı')),
                ('period_end', models.DateTimeField(verbose_name='Dönem Bitişi')),
                ('api_calls', models.PositiveIntegerField(default=0, verbose_name='API Çağrısı Sayısı')),
                ('marketplace_views', models.PositiveIntegerField(default=0, verbose_name='Pazaryeri Görüntüleme')),
                ('orders_created', models.PositiveIntegerField(default=0, verbose_name='Oluşturulan Sipariş')),
                ('revenue_generated', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Oluşturulan Gelir')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('subscription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_records', to='subscriptions.subscription', verbose_name='Abonelik')),
            ],
            options={
                'verbose_name': 'Abonelik Kullanımı',
                'verbose_name_plural': 'Abonelik Kullanımları',
                'ordering': ['-period_start'],
                'unique_together': {('subscription', 'period_start')},
            },
        ),
    ]
